import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;

public class MyBuffedReaderDemo
{
    public static void main(String[] args)throws IOException

    {
        FileReader fr=new FileReader("F:\\2019.java\\15.txt");
        MyBufferedReader myBuf=new MyBufferedReader(fr);
        String line=null;
        while((line=myBuf.myReadLine())!=null)
        {
            System.out.println(line);
        }
        myBuf.myClose();
    }
}


class MyBufferedReader extends Reader{
    private Reader r;
    MyBufferedReader(Reader r){
        this.r=r;
    }
    public String myReadLine()throws IOException{

        //定义一个临时容器。元BufferedReader封装的是字符数组。
        //定义一个StringBuilder容器。因为最终还是要变成字符串。

        StringBuilder sb=new StringBuilder();
        int ch=0;
        while ((ch=r.read())!=1) {
            if (ch == '\r')
                continue;
            if (ch == '\n')
                return sb.toString();
            else
                sb.append((char) ch);
        }
        if(sb.length()!=0)
            return sb.toString();
        return null;

    }

    //覆盖Reader类中的抽象方法
    public int read(char[] cbuf,int off,int len)throws IOException{
        return r.read(cbuf,off,len);

    }

    public void close()throws IOException{
        r.close();
    }

    public void myClose() throws IOException{
        r.close();
    }



}
